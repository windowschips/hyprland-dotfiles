#!/bin/bash

# See README.md for usage instructions
volume_step=1
brightness_step=5
max_volume=100
notification_timeout=1000

function get_volume {
    pactl get-sink-volume @DEFAULT_SINK@ | grep -Po '[0-9]{1,3}(?=%)' | head -1
}

function get_mute {
    pactl get-sink-mute @DEFAULT_SINK@ | grep -Po '(?<=Mute: )(yes|no)'
}

function get_brightness {
    brightnessctl -P g
}

function get_volume_icon {
    volume=$(get_volume)
    mute=$(get_mute)
    if [ "$volume" -eq 0 ] || [ "$mute" == "yes" ] ; then
        volume_icon="󰝟"
    elif [ "$volume" -lt 1 ]; then
        volume_icon="󰕿"
    elif [ "$volume" -lt 50 ]; then
        volume_icon="󰖀"
    else
        volume_icon="󰕾"
    fi
}

function get_brightness_icon {
    brightness_icon="󰖨"
}


function show_volume_notif {
    volume=$(get_mute)
    get_volume_icon
    notify-send -t $notification_timeout -h string:x-dunst-stack-tag:volume_notif -h int:value:$volume "$volume_icon $volume%"
}

function show_brightness_notif {
    brightness=$(get_brightness)
    echo $brightness
    get_brightness_icon
    notify-send -t $notification_timeout -h string:x-dunst-stack-tag:brightness_notif -h int:value:$brightness "$brightness_icon $brightness%"
}

case $1 in
    volume_up)
    pactl set-sink-mute @DEFAULT_SINK@ 0
    volume=$(get_volume)
    if [ $(( "$volume" + "$volume_step" )) -gt 200 ]; then
        pactl set-sink-volume @DEFAULT_SINK@ 200%
    else
        pactl set-sink-volume @DEFAULT_SINK@ +5%
    fi
    show_volume_notif
    ;;

    volume_down)
    pactl set-sink-volume @DEFAULT_SINK@ -5%
    show_volume_notif
    ;;

    volume_mute)
    pactl set-sink-mute @DEFAULT_SINK@ toggle
    show_volume_notif
    ;;

    brightness_up)
    brightnessctl set 5%+
    show_brightness_notif
    ;;

    brightness_down)
    eval "brightnessctl --min-value=47 set 5%- "
    show_brightness_notif
    ;;
esac
